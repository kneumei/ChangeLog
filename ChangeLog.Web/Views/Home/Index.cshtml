@using System.Linq;

@model ChangeLog.Web.Models.HomeViewModel 

@{ 
	var title = "Galileo Release Notes";
	var rangeSpecified = false;
	var versionRange = "";
	if(Model.BeginVersion !=null && Model.EndVersion!=null){
		title += $" {versionRange}";
		rangeSpecified = true;
		versionRange= $"{Model.BeginVersion.ToString()} - {Model.EndVersion.ToString()}";
	}
	ViewData["Title"] = title;
	<div data-marker=@Html.Raw(Json.Serialize(Model.AllVersions))></div>
}

<h1 class="text-center">Galileo Change Log</h1>
<hr>

<form action="/" method="get" >
	<div class="form-row">
		<div class="form-group col-md-5">
			<label for="beginVersion">Current Version</label>
			<div class="typeahead__container">
				<div class="typeahead__field">
					<div class="typeahead__query">
						<input 
							id = "beginVersion" 
							class = "form-control" 
							name="beginVersion" 
							type="search" 
							value="@Model.BeginVersion?.ToString()"
							autocomplete="off"/>
					</div>
				</div>
			</div>
		</div>
		<div class="form-group col-md-5">
			<label for="endVersion">Target Version</label>
			<div class="typeahead__container">
				<div class="typeahead__field">
					<div class="typeahead__query">
						<input 
							id= "endVersion" 
							name="endVersion" 
							class = "form-control" 
							type="search" 
							value="@Model.EndVersion?.ToString()" 
							autocomplete="off"/>
					</div>
				</div>
			</div>
		 </div>
		<div class="form-group col-md-2">
			<label for="button">&nbsp;</label>
			<input id ="button" class="btn btn-primary form-control" type="submit" id="submit" value="Submit" />
		</div>
	 </div>
</form>
<br/>


@if(rangeSpecified){
	var versionGroups = Model.Commits
		.GroupBy(c => c.Version);
	var versionKeys = versionGroups.Select(g => g.Key).OrderByDescending(v => v);

	@foreach(var version in versionKeys){
		var categoryGroups = @versionGroups
			.Single(g => g.Key == version)
			.GroupBy(c => c.Category);
		var categoryKeys = @categoryGroups.Select(c => c.Key).OrderBy(c => c);

		<div class="card">
		<div class="card-header">@version.ToString()</div>
		<div class="card-body">

		@foreach(var category in categoryKeys){
			<h5 class="card-title">@category.ToString()</h5>
			<ul class="list-unstyled">
			@foreach(var pr in categoryGroups.Single(c => c.Key == category)){
				<li ><a href="@pr.Url">#@pr.PullRequestNumber</a> (@pr.Author) - @pr.Title</li>
			}
			</ul>
		}

		</div>
		</div>
		<br>
	}
}